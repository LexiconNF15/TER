@model TravelExpenseReport.Models.Expense

@{
    ViewBag.Title = "Edit";
}

@*<h4>
    @ViewBag.ActiveTravelReport.TravelReportName
    @ViewBag.ActiveTravelReport.ApplicationUser.FullName
    @ViewBag.ActiveTravelReport.DepartureDate.Date.ToString("yyyy-MM-dd")
    @ViewBag.ActiveTravelReport.ReturnDate.Date.ToString("yyyy-MM-dd")
 </h4>*@
<h4> Reseräkning: @ViewBag.ActiveTravelReport.TravelReportName </h4>
<h4> Resedatum: @ViewBag.ActiveTravelReport.DepartureDate.Date.ToString("yyyy-MM-dd") @ViewBag.ActiveTravelReport.ReturnDate.Date.ToString("yyyy-MM-dd") </h4>

@*<h3>Ändra kostnad för: @ViewBag.ExpenseTypeName </h3>*@
<h3>Ändra kostnad</h3>
<h5 class="text-danger"> @ViewBag.ErrorMsg</h5>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
      <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ExpenseId)
        @Html.HiddenFor(model => model.ExpenseTypeId)
        @Html.HiddenFor(model => model.ExpenseAmount)

        @*<div class="form-group">
            @Html.LabelFor(model => model.ExpenseTypeId, "ExpenseTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ExpenseTypeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ExpenseTypeId, "", new { @class = "text-danger" })
            </div>
        </div>*@

          @*<div class="form-group">
              @Html.LabelFor(model => model.ExpenseTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
             <div class="col-md-10">
                @Html.DisplayFor(model => model.ExpenseType.ExpenseTypeName)
            </div>
            </div>*@

            <dl class="dl-horizontal">
              <dt>
                  @Html.DisplayNameFor(model => model.ExpenseType.ExpenseTypeName)
              </dt>

              <dd>
                  @Html.DisplayFor(model => model.ExpenseType.ExpenseTypeName)
              </dd>
              </dl>

              <div class="form-group">
                  @Html.LabelFor(model => model.ExpenseDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                  <div class="col-md-10">
                      @Html.EditorFor(model => model.ExpenseDescription, new { htmlAttributes = new { @class = "form-control" } })
                      @Html.ValidationMessageFor(model => model.ExpenseDescription, "", new { @class = "text-danger" })
                  </div>
              </div>

              <div class="form-group">
                  @Html.LabelFor(model => model.ExpenseDate, htmlAttributes: new { @class = "control-label col-md-2" })
                  <div class="col-md-10">
                      @Html.EditorFor(model => model.ExpenseDate, new { htmlAttributes = new { @class = "form-control" } })
                      @Html.ValidationMessageFor(model => model.ExpenseDate, "", new { @class = "text-danger" })
                  </div>
              </div>

              @if (ViewBag.ActualExpenseTypeId != 4)
              {
                  <div class="form-group">
                      @Html.LabelFor(model => model.ExpenseAmountInfo, htmlAttributes: new { @class = "control-label col-md-2" })
                      <div class="col-md-10">
                          @Html.EditorFor(model => model.ExpenseAmountInfo, new { htmlAttributes = new { @class = "form-control" } })
                          @Html.ValidationMessageFor(model => model.ExpenseAmountInfo, "", new { @class = "text-danger" })

                      </div>
                  </div>
              }
              @if (ViewBag.ActualExpenseTypeId == 4)
              {
                  @*<div class="form-group">
                    @Html.LabelFor(model => model.ExpenseAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ExpenseAmount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ExpenseAmount, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                  <div class="form-group">
                      @Html.LabelFor(model => model.ExpenseMilage, htmlAttributes: new { @class = "control-label col-md-2" })
                      <div class="col-md-10">
                          @Html.EditorFor(model => model.ExpenseMilage, new { htmlAttributes = new { @class = "form-control" } })
                          @Html.ValidationMessageFor(model => model.ExpenseMilage, "", new { @class = "text-danger" })
                      </div>
                  </div>
              }

              <div class="form-group">
                  @*@Html.LabelFor(model => model.TravelReportId, "TravelReportId", htmlAttributes: new { @class = "control-label col-md-2" })*@
                  <div class="col-md-10">
                      @Html.HiddenFor(model => model.TravelReportId, new { @Value = @ViewBag.ActualTravelReportId, @readonly = "true" })
                      @Html.ValidationMessageFor(model => model.TravelReportId, "", new { @class = "text-danger" })
                  </div>
              </div>

              <div class="form-group">
                  <div class="col-md-offset-2 col-md-10">
                      <input type="submit" value="Spara" class="btn btn-default btn-success" />
                  </div>
              </div>
</div>
}

<div>
    @Html.ActionLink("Visa kostnader", "Index", new { tId = @ViewBag.ActualTravelReportId }, new { @class = "btn btn-default btn-primary" })
    @Html.ActionLink("Till reseräkningen", "Calc", "TravelReports", new { id = ViewBag.ActualTravelReportId }, new { @class = "btn btn-default btn-primary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}