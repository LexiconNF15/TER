@model TravelExpenseReport.ViewModels.TravelReportViewModel1

@{
    ViewBag.Title = "Index";
}

<h2>Lista över reseräkningar</h2>

<p>
    @Html.ActionLink("Lägg till", "Create", null, new { @class = "btn btn-default btn-sm btn-primary" })
</p>



<table class="table">
    <tr>
        @if (!User.IsInRole("Assistant"))
        {
            <th>
                @Html.DisplayNameFor(model => model.SelectedTRUser.FirstOrDefault().ApplicationUser.FullName)
                <br />

                @if (ViewBag.Filtered)
                {
                    @Html.DropDownListFor(m => m.UserList.SelectedTravelUser, Model.UserList.TravelUsers)
                    @Html.ValidationMessageFor(m => m.UserList.SelectedTravelUser)
                    <br />
                    @Html.ActionLink("Visa alla", "Index", null, new { @class = "btn btn-default btn-sm" })
                }
                else
                {
                    @*@Html.Partial("_SelectPartialView")*@

                using (Html.BeginForm())
                {
                    @Html.DropDownListFor(m => m.UserList.SelectedTravelUser, Model.UserList.TravelUsers)
                    @Html.ValidationMessageFor(m => m.UserList.SelectedTravelUser)
                    <br />

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Filtrera" name="SelectedTravelItem" class="btn btn-default btn-sm" />
                        </div>
                    </div>
                    }
                }
            </th>
        }
        <th>
            @Html.DisplayNameFor(model => model.SelectedTRUser.FirstOrDefault().StatusType.StatusName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SelectedTRUser.FirstOrDefault().TravelReportName)
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.SelectedTRUser.FirstOrDefault().ApplicationUser.PatientId)*@
            @Html.DisplayNameFor(model => model.SelectedTRUser.FirstOrDefault().Patient.PatientName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SelectedTRUser.FirstOrDefault().Destination)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SelectedTRUser.FirstOrDefault().Purpose)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SelectedTRUser.FirstOrDefault().DepartureDate)
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.SelectedTRUser.FirstOrDefault().DepartureTime)
            </th>*@
        <th>
            @Html.DisplayNameFor(model => model.SelectedTRUser.FirstOrDefault().ReturnDate)
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.SelectedTRUser.FirstOrDefault().ReturnTime)
            </th>*@
        @*<th>
                @Html.DisplayNameFor(model => model.SelectedTRUser.FirstOrDefault().DepartureHoursExtra)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SelectedTRUser.FirstOrDefault().ReturnHoursExtra)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SelectedTRUser.FirstOrDefault().FullDay)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SelectedTRUser.FirstOrDefault().HalfDay)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SelectedTRUser.FirstOrDefault().Night)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SelectedTRUser.FirstOrDefault().BreakfastDeduction)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SelectedTRUser.FirstOrDefault().LunchOrDinnerDeduction)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SelectedTRUser.FirstOrDefault().AllMealsDeduction)
            </th>*@
        <th>
            @Html.DisplayNameFor(model => model.SelectedTRUser.FirstOrDefault().Comment)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.SelectedTRUser)
    {
        <tr>
            @if (!User.IsInRole("Assistant"))
            {
                <td>
                    @Html.DisplayFor(modelItem => item.ApplicationUser.FullName)
                </td>
            }
            <td>
                @Html.DisplayFor(modelItem => item.StatusType.StatusName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TravelReportName)
            </td>
            <td>
                @*@Html.DisplayFor(modelItem => item.PatientId)*@
                @Html.DisplayFor(modelItem => item.Patient.PatientName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Destination)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Purpose)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DepartureDate)
                @*</td>
                    <td>*@
                @*@Html.DisplayFor(modelItem => item.DepartureTime)*@
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReturnDate)
                @*</td>
                    <td>*@
                @*@Html.DisplayFor(modelItem => item.ReturnTime)*@
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.DepartureHoursExtra)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReturnHoursExtra)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FullDay)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HalfDay)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Night)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BreakfastDeduction)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LunchOrDinnerDeduction)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AllMealsDeduction)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Comment)
            </td>
            @*@if (User.IsInRole("Assistant"))*@
            @if (ViewBag.ActiveUser == item.ApplicationUserId)
            {
                <td>
                    @*@Html.ActionLink("Beräkna igen", "Edit2", new { id = item.TravelReportId }, new { @class = "btn btn-default btn-primary" })*@
                    @if (item.StatusType.StatusName == "Ny")
                    {
                        if (User.IsInRole("Assistant"))
                        {
                            @Html.ActionLink("Gör klar", "Calc", new { id = item.TravelReportId }, new { @class = "btn btn-default btn-sm btn-primary" })
                            @Html.ActionLink("Radera", "Delete", new { id = item.TravelReportId }, new { @class = "btn btn-default btn-sm btn-warning" })
                        }
                        else
                        {
                            @Html.ActionLink("Gör klar", "Calc", new { id = item.TravelReportId, selectedUserId = Model.UserList.SelectedTravelUser }, new { @class = "btn btn-default btn-sm btn-primary" })
                            @Html.ActionLink("Radera", "Delete", new { id = item.TravelReportId, selectedUserId = Model.UserList.SelectedTravelUser }, new { @class = "btn btn-default btn-sm btn-warning" })
                        }
                    }
                    else
                    {

                        if (item.StatusType.StatusName == "Ej godkänd")
                        {
                            if (User.IsInRole("Assistant"))
                            {
                                @Html.ActionLink("Gör klar", "Calc", new { id = item.TravelReportId, selectedUserId = ViewBag.selectedUserId }, new { @class = "btn btn-default btn-sm btn-primary" })
                            }
                            else
                            {
                            @Html.ActionLink("Gör klar", "Calc", new { id = item.TravelReportId, selectedUserId = ViewBag.selectedUserId }, new { @class = "btn btn-default btn-sm btn-primary" })

                            }

                        }
                        else
                        {
                            if (User.IsInRole("Assistant"))
                            {
                            @Html.ActionLink("Visa", "Details", new { id = item.TravelReportId }, new { @class = "btn btn-default btn-sm btn-primary" })

                            }
                            else
                            {
                                @Html.ActionLink("Visa", "Details", new { id = item.TravelReportId, selectedUserId = Model.UserList.SelectedTravelUser }, new { @class = "btn btn-default btn-sm btn-primary" })

                            }
                        }
                    }
                </td>
            }
            else
            {
                <td>

                    @*@if (ViewBag.ActiveUser == item.ApplicationUserId)
                        {
                        @*if (item.StatusType.StatusName == "Ny")
                            {
                                @Html.ActionLink("Visa/ändra", "Calc", new { id = item.TravelReportId }, new { @class = "btn btn-default btn-primary" })
                                @Html.ActionLink("Radera", "Delete", new { id = item.TravelReportId }, new { @class = "btn btn-default btn-primary" })
                            }
                            if (item.StatusType.StatusName == "Ej godkänd")
                            {
                                @Html.ActionLink("Visa/ändra", "Calc", new { id = item.TravelReportId }, new { @class = "btn btn-default btn-primary" })
                            }*@
                    @if (!User.IsInRole("Assistant"))
                    {
                        if (item.StatusType.StatusName == "Inskickad")
                        {
                            @Html.ActionLink("Granska", "Calc", new { id = item.TravelReportId, selectedUserId = Model.UserList.SelectedTravelUser }, new { @class = "btn btn-default btn-sm btn-primary" })
                        }
                        else
                        {
                            if (item.StatusType.StatusName == "Ny")
                            {
                            }
                            else
                            {
                                @Html.ActionLink("Visa", "Details", new { id = item.TravelReportId, selectedUserId = Model.UserList.SelectedTravelUser }, new { @class = "btn btn-default btn-sm btn-primary" })
                            }
                        }
                    }
                </td>
            }

        </tr>
    }

</table>
@*@if (!User.IsInRole("Assistant"))
    {
        @Html.ActionLink("Visa alla", "Index", null, new { @class = "btn btn-default btn-sm btn-primary" })
    }*@



